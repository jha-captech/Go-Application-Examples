basePath: /api
definitions:
  handlers.UserRequest:
    properties:
      email:
        type: string
      name:
        maxLength: 50
        minLength: 2
        type: string
      password:
        maxLength: 30
        minLength: 8
        type: string
    required:
    - email
    - name
    - password
    type: object
  handlers.healthResponse:
    properties:
      details:
        items:
          $ref: '#/definitions/services.HealthStatus'
        type: array
      status:
        type: string
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  services.HealthStatus:
    properties:
      name:
        type: string
      status:
        type: string
    type: object
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: Practice Go API using the Standard Library and Postgres
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Blog Service API
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Health Check endpoint
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/handlers.healthResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.healthResponse'
      summary: Health Check
      tags:
      - health
  /user:
    get:
      consumes:
      - application/json
      description: List All Users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: List Users
      tags:
      - user
    post:
      consumes:
      - application/json
      description: Creates a User
      parameters:
      - description: User to Create
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Create User
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      description: Delete User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Delete User
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Read User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Read User
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User to Create
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/handlers.UserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            type: string
        "404":
          description: Not Found
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            type: string
      summary: Update User
      tags:
      - user
swagger: "2.0"
