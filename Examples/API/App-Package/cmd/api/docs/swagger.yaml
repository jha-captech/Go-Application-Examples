definitions:
  app.problemDetail:
    properties:
      detail:
        description: A human-readable explanation specific to this occurrence of the
          problem.
        type: string
      status:
        description: The HTTP status code generated by the origin server.
        type: integer
      title:
        description: A short, human-readable summary of the problem.
        type: string
      traceId:
        description: An optional trace ID for debugging purposes.
        type: string
    type: object
  app.problemDetailValidation:
    properties:
      detail:
        description: A human-readable explanation specific to this occurrence of the
          problem.
        type: string
      invalidParams:
        description: A list of invalid parameters with error details.
        items:
          $ref: '#/definitions/app.validationProblem'
        type: array
      status:
        description: The HTTP status code generated by the origin server.
        type: integer
      title:
        description: A short, human-readable summary of the problem.
        type: string
      traceId:
        description: An optional trace ID for debugging purposes.
        type: string
    type: object
  app.user:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      password:
        type: string
    type: object
  app.userResponse:
    properties:
      email:
        type: string
      id:
        type: integer
      name:
        type: string
    type: object
  app.validationProblem:
    properties:
      code:
        type: string
      field:
        type: string
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/user:
    post:
      consumes:
      - application/json
      description: Create a new user
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/app.user'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/app.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.problemDetailValidation'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.problemDetail'
      summary: Create User
      tags:
      - user
  /api/user/{id}:
    delete:
      description: Delete a user by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.problemDetail'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/app.problemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.problemDetail'
      summary: Delete User
      tags:
      - user
    get:
      consumes:
      - application/json
      description: Read User by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.problemDetail'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/app.problemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.problemDetail'
      summary: Read User
      tags:
      - user
    put:
      consumes:
      - application/json
      description: Update user fields by ID
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/app.user'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.userResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.problemDetailValidation'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/app.problemDetail'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.problemDetail'
      summary: Update User
      tags:
      - user
  /api/users:
    get:
      description: List all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/app.user'
            type: array
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.problemDetail'
      summary: List Users
      tags:
      - user
swagger: "2.0"
